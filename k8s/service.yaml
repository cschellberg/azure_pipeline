apiVersion: v1 # API version for Service objects
kind: Service # Type of Kubernetes object: Service
metadata:
  name: java-test-service # Name of your Service.
spec:
  selector:
    app: java-test # Selector to identify which Pods this Service should route traffic to. Must match Deployment's pod labels.
  ports:
  - protocol: TCP
    port: 80 # The port the Service itself will listen on (can be different from targetPort)
    targetPort: 8080 # The port on the Pods that the Service will forward traffic to
    # nodePort: 30000 # Optional: Specify a static NodePort in the 30000-32767 range for direct host access.
                     # If omitted, Kubernetes will assign a random one (for NodePort type).
  type: NodePort # Defines how the Service is exposed:
                  # - ClusterIP: Default, only accessible within the cluster.
                  # - NodePort: Exposes the Service on a port on each Node (accessible from outside the cluster).
                  #             Good for Docker Desktop local testing.
                  # - LoadBalancer: For cloud providers, creates an external load balancer.
                  # - ExternalName: Maps the Service to a DNS name.